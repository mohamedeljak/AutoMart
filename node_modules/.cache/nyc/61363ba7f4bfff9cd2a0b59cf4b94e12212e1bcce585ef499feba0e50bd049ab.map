{"version":3,"sources":["Cars.js"],"names":["Joi","require","Car","create","req","res","body","data","email","first_name","password","status","send","reflection","CarModel","createsignin","createcarad","token","headers","manufacture","price","keyreflection","Object","keys","length","createorderad","price_offered","params","car_id","getAll","reflections","findAll","getAllsigninusers","findAllsigninusers","getAllcarsads","findAllcarsads","getAllorders","findAllorders","getOne","findOne","id","getOrderOne","findoderOne","getOneCar","findCarOne","getA1","findA1","query","success","lowPoint","getunsoldcarpricerange","findsoldcarpricerange","getunsoldcar","findsoldcars","update","updatedReflection","updateorderprice","new_price","console","log","updatecarstatus","updatecarprice","car_price","deletecarad","ref","reflectionx","delete"],"mappings":"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","sourceRoot":"/home/mhashim/Desktop/NewWork/AutoMart/src/controllers","sourcesContent":["//import ReflectionModel from '../models/Reflection';\nimport CarModel from '../models/Cars';\nconst Joi = require('joi');\n\nconst Car = {\n  /**\n   * \n   * @param {object} req \n   * @param {object} res\n   * @returns {object} reflection object \n   */\n  create(req, res) {\n    if (!req.body.data.email || !req.body.data.first_name ||  !req.body.data.password) {\n      return res.status(400).send({'message': ' signup All fields are required'})\n    }\n    const reflection = CarModel.create(req.body.data);\n    return res.status(201).send(reflection);\n  },\n\n createsignin(req, res) {\n    if (!req.body.data.email || !req.body.data.first_name ||  !req.body.data.password) {\n      return res.status(400).send({'message': ' SigninAll fields are required'})\n    }\n    const reflection = CarModel.createsignin(req.body.data);\n    return res.status(201).send(reflection);\n  },\n createcarad(req, res) {\n    var token = req.headers['access-token'];\n  //console.log(\"token===\"+token);\n    if (!req.body.manufacture ||  !req.body.price) {\n      return res.status(400).send({'message': '  car ad  All fields are required'})\n    }\n    const reflection = CarModel.createcarad(req.body,token);\n    var keyreflection = Object.keys(reflection).length;\n    //console.log(\"xxxxxxxxxx\"+keyreflection); \n    if (keyreflection > 2){ \n    return res.status(201).send({\"status\":201 , \"message\": \"Car AD  is created\", \"data\" : reflection});\n                          }\n\n                          else{\n                            //console.log(ReflectionModel.createcarad.reflectioncaraddnotfound);\n                             return res.status(201).send({\"status\":201 , \"message\": \" Car ad not created \", \"data\" :reflection});\n                            //return res.status(201).send({\"status\":404 , \"message\": \"User not found check token please\"});\n\n                          }  \n  },\n\ncreateorderad(req, res) {\n var token = req.headers['access-token'];\n  //console.log(\"token===\"+token);\n    if (!req.body.price_offered) {\n      return res.status(400).send({'message': '  order ad  All fields are required'})\n    }\n    const reflection = CarModel.createorderad(req.body,token,req.params.car_id);\n    var keyreflection = Object.keys(reflection).length;\n    if (keyreflection > 2){\n    return res.status(201).send({\"status\":201 , \"message\": \"Buy Order  is created\", \"data\" : reflection});\n     }\n     else {\n          return res.status(201).send({\"status\":201 , \"message\": \" Order ad not created \", \"data\" :reflection});\n        }//////////////////////if ok \n  \n  },\n\n\n  /**\n   * \n   * @param {object} req \n   * @param {object} res \n   * @returns {object} reflections array\n   */\n  getAll(req, res) {\n    const reflections = CarModel.findAll();\n    return res.status(200).send(reflections);\n  },\n\n  getAllsigninusers(req, res) {\n    const reflections = CarModel.findAllsigninusers();\n    return res.status(200).send(reflections);\n  },\n\n   getAllcarsads(req, res) {\n    const reflections = CarModel.findAllcarsads();\n    return res.status(200).send({\"status\":200 , \"message\": \"all cars \", \"data\" : reflections});\n  },\n\n\ngetAllorders(req, res) {\n    const reflections = CarModel.findAllorders();\n    return res.status(200).send({\"status\":200 , \"message\": \"all orders \", \"data\" :reflections});\n  },\n\n  /**\n   * \n   * @param {object} req \n   * @param {object} res\n   * @returns {object} reflection object\n   */\n  getOne(req, res) {\n    const reflection = CarModel.findOne(req.params.id);\n    if (!reflection) {\n      return res.status(404).send({'message': 'reflection not found'});\n    }\n    return res.status(200).send(reflection);\n  },\n\n  getOrderOne(req, res) {\n    const reflection = CarModel.findoderOne(req.params.id);\n    if (!reflection) {\n      return res.status(404).send({'message': ' Order not found not found'});\n    }\n    return res.status(200).send({\"status\":200 , \"message\": \" Get order ad by id \", \"data\" :reflection});\n  },\n\n  getOneCar(req, res) {\n    const reflection = CarModel.findCarOne(req.params.id);\n    if (!reflection) {\n      return res.status(404).send({'message': ' Car found not found'});\n    }\n    return res.status(200).send({\"status\":200 , \"message\": \" Get car ad by id \", \"data\" :reflection});\n  },\n\n  getA1(req, res) {\n  \n    const reflection = CarModel.findA1(req.query.success , req.query.lowPoint);\n    if (!reflection) {\n      return res.status(404).send({'message': 'reflection seach  not found'});\n    }\n    return res.status(200).send(reflection);\n  },\n\n\ngetunsoldcarpricerange(req, res) {\n  \n    const reflection = CarModel.findsoldcarpricerange(req.query);\n    if (!reflection) {\n      return res.status(404).send({'message': '  unsold price  seach  not found'});\n    }\n    return res.status(200).send({\"status\":200 , \"message\": \"all cars \", \"data\" :reflection});\n  },\n\ngetunsoldcar(req, res) {\n  \n    const reflection = CarModel.findsoldcars(req.query);\n    if (!reflection) {\n      return res.status(404).send({'message': 'No availabe car'});\n    }\n    return res.status(200).send(reflection);\n  },\n\n\n  /**\n   * \n   * @param {object} req \n   * @param {object} res \n   * @returns {object} updated reflection\n   */\n  update(req, res) {\n    const reflection = CarModel.findOne(req.params.id);\n    if (!reflection) {\n      return res.status(404).send({'message': 'reflection not found'});\n    }\n    const updatedReflection = CarModel.update(req.params.id, req.body)\n    return res.status(200).send(updatedReflection);\n  },\n\nupdateorderprice(req, res) {\n  var token = req.headers['access-token'];\n    var new_price=req.params.new_price;\n    const reflection = CarModel.findoderOne(req.params.id);\n    /*\n    if (!reflection) {\n      return res.status(404).send({'message': ' update  order  not found'});\n    }\n    */\n    const updatedReflection = CarModel.updateorderprice(req.params.id, req.body, token)\n    console.log(updatedReflection); \n    var keyreflection = Object.keys(updatedReflection).length;\n    if (keyreflection > 2 ){\n    return res.status(200).send({\"status\":200 , \"message\": \" successfully updated \", \"data\" :updatedReflection});\n    }\n    else {\nreturn res.status(201).send({\"status\":201 , \"message\": \" order offered price not updated \", \"data\" :updatedReflection});\n                            //return res.status(201).send({\"status\":404 , \"message\": \"User not found check token please\"});\n\n\n    }\n  },\n\n/////////////////////////////////////////\nupdatecarstatus(req, res) {\n\n\n  var token = req.headers['access-token'];\n    var new_price=req.params.new_price;\n    const reflection = CarModel.findCarOne(req.params.id);\n    /*\n    if (!reflection) {\n      return res.status(404).send({'message': ' ID error  Can not update car stutas to sold   '});\n    }\n    */\n    const updatedReflection = CarModel.updatecarstatus(req.params.id, req.body,token)\n     var keyreflection = Object.keys(updatedReflection).length;\n   if (keyreflection > 2){\n    return res.status(200).send({\"status\":200 , \"message\": \" successfully updated  car status to sold\", \"data\" :updatedReflection});\n  }\n  else {\nreturn res.status(201).send({\"status\":201 , \"message\": \" Car Ad Status not updated \", \"data\" :updatedReflection});\n                            //return res.status(201).send({\"status\":404 , \"message\": \"User not found check token please\"});\n\n\n  }\n  },\n\n  updatecarprice(req, res) {\n    var token = req.headers['access-token'];\n    var car_price=req.params.car_price;\n    const reflection = CarModel.findCarOne(req.params.id);\n    /*\n    if (!reflection) {\n      return res.status(404).send({'message': ' car_price not updated  '});\n    }\n    */\n    const updatedReflection = CarModel.updatecarprice(req.params.id, req.body, token )\n    var keyreflection = Object.keys(updatedReflection).length;\n    if (keyreflection > 2){\n    return res.status(200).send({\"status\":200 , \"message\": \" successfully updated \", \"data\" :updatedReflection});\n    }\n  else {\n      return res.status(201).send({\"status\":201 , \"message\": \" Car price not updated \", \"data\" :updatedReflection});\n                            //return res.status(201).send({\"status\":404 , \"message\": \"User not found check token please\"});\n\n\n  }\n\n  },\n\n\n  /**\n   * \n   * @param {object} req \n\n   * @param {object} res \n   * @returns {void} return statuc code 204 \n   */\n\n   \n   deletecarad(req, res) {\n    const reflection = CarModel.findCarOne(req.params.id);\n    if (!reflection) {\n      return res.status(404).send({'message': 'car id  not found'});\n    }\n    \n    const ref = CarModel.deletecarad(req.params.id);\n    const reflectionx = CarModel.findCarOne(req.params.id);\n    return res.status(404).send({'status':0 ,'message': 'Car Ad successfully deleted'});\n    //return res.status(204).send(me);\n        \n  },\n\n\n\n  delete(req, res) {\n    const reflection = CarModel.findOne(req.params.id);\n    if (!reflection) {\n      return res.status(404).send({'message': 'reflection not found'});\n    }\n    const ref = CarModel.delete(req.params.id);\n    return res.status(204).send(ref);\n  }\n}\n\nexport default Car;"]}