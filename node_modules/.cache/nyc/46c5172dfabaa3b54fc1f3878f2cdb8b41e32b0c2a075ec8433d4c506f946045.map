{"version":3,"sources":["user.js"],"names":["Joi","require","JSON","key","user","constructor","reflections","reflectionssignin","create","data","email","token","jwt","sign","tokenkey","newReflection","id","uuid","v4","first_name","last_name","address","is_admin","password","createdDate","moment","now","modifiedDate","push","getunsigninuser","q","console","log","reflection","find","reflect","index","indexOf","passwordfound","findOne","findA1","success","lowPoint","filter","findAll","findAllsigninusers","findAllcarsads","reflectionscreatecaradd","findAllorders","reflectioncreateorder","update","takeAway","delete","splice"],"mappings":"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","sourceRoot":"/home/mhashim/Desktop/NewWork/AutoMart/src/models","sourcesContent":["import moment from 'moment';\nimport uuid from 'uuid';\nimport jwt from 'jsonwebtoken';\n\n\n\n//import joi  from 'joi';\nconst Joi = require('joi');\nconst JSON = require('circular-json');\n//const key = require('../key');\nconst key = require('../middlewares/key');\n\nclass user {\n  /**\n   * class constructor\n   * @param {object} data\n   */\n  constructor() {\n    this.reflections = [];\n    this.reflectionssignin = [];\n      }\n  /**\n   * \n   * @returns {object} reflection object\n   */\n  ///////////////////////////////Signup\n  \n  create(data) {\n    \n \n\n    \n\n   //const result = Joi.validate({ username: 'abc', birthyear: 1994 }, schema);\n    \n    const email= data.email;\n    const token = jwt.sign({email:email},key.tokenkey);\n   \n  const newReflection = {\n         id: uuid.v4(),\n         email: data.email ,\n         first_name: data.first_name,\n         last_name: data.last_name,\n         token : token,\n         address :data.address ,\n         is_admin : data.is_admin ,\n         password : data.password,\n         createdDate: moment.now(),\n         modifiedDate: moment.now()\n         };\n      \n      //console.log(newReflection.token)\n    this.reflections.push(newReflection);\n    return newReflection\n   \n  \n  \n  }\n  //////////////////////////////////////End signup\n  ///////////////////////////////Signin\n  getunsigninuser(q) {\n    console.log(q.email);\n    console.log(q.password);\n    //console.log(Object.keys(q).length);\n    //const reflection = this.findOne(id);\n    //const index = this.reflections.indexOf(reflection);\n   //const emailfound = this.reflections.find(reflect => reflect.email === q.email);\n    const reflection = this.reflections.find(reflect => reflect.email === q.email)\n    if (reflection){\n    const index = this.reflections.indexOf(reflection);\n    console.log(\"index=\"+index); \n\n   const passwordfound = this.reflections.find(reflect => reflect.password === q.password); \n   if ((this.reflections[index].email === q.email) && (this.reflections[index].password === q.password)){\n  \n    return this.reflections.find(reflect => reflect.email === q.email);\n    }\n    else {\n\n      return {\"status\":404 , \"message\": \"Email or password Wrong\"};    \n    \n    }\n\n  }\n  else\n    {  return {\"status\":404 , \"message\": \"User  not found\"};    }\n  }\n  //////////////////////////////////////End signin\n///////////////////////////////create car post ad\n \n  findOne(id) {\n    return this.reflections.find(reflect => reflect.id === id);\n  }\n\n  \n\n  \n\n\n  findA1(success , lowPoint) {\nreturn this.reflections.filter(( reflect => reflect.lowPoint === lowPoint) && (reflect => reflect.success === success));\n  }\n\n  \n  /**\n   * @returns {object} returns all reflections\n   */\n  findAll() {\n    return this.reflections;\n  }\n\n  findAllsigninusers() {\n    return this.reflectionssignin;\n  }\n\n  findAllcarsads() {\n    return this.reflectionscreatecaradd;\n  }\n\n  findAllorders() {\n    return this.reflectioncreateorder;\n  }\n  /**\n   * \n   * @param {uuid} id\n   * @param {object} data \n   */\n  update(id, data) {\n    const reflection = this.findOne(id);\n    const index = this.reflections.indexOf(reflection);\n    this.reflections[index].success = data['success'] || reflection.success;\n    this.reflections[index].lowPoint = data['lowPoint'] || reflection.lowPoint;\n    this.reflections[index].takeAway = data['takeAway'] || reflection.takeAway;\n    this.reflections[index].modifiedDate = moment.now()\n    return this.reflections[index];\n  }\n\n  \n \n  \n\n  /**\n   * \n   * @param {uuid} id \n   */\n\n   \n  delete(id) {\n    const reflection = this.findOne(id);\n    const index = this.reflections.indexOf(reflection);\n    this.reflections.splice(index, 1);\n    return {};\n  }\n}\nexport default new user();"]}