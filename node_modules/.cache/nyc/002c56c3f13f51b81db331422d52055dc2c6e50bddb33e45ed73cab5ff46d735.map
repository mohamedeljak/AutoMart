{"version":3,"sources":["user.js"],"names":["Joi","require","JSON","key","user","reflections","reflectionssignin","data","email","token","jwt","sign","tokenkey","newReflection","id","uuid","v4","first_name","last_name","address","is_admin","password","createdDate","moment","now","modifiedDate","push","q","console","log","reflection","find","reflect","index","indexOf","passwordfound","success","lowPoint","filter","reflectionscreatecaradd","reflectioncreateorder","findOne","takeAway","splice"],"mappings":"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","sourceRoot":"/home/mhashim/Desktop/NewWork/AutoMart/src/models","sourcesContent":["import moment from 'moment';\nimport uuid from 'uuid';\nimport jwt from 'jsonwebtoken';\n\n\n\n//import joi  from 'joi';\nconst Joi = require('joi');\nconst JSON = require('circular-json');\n//const key = require('../key');\nconst key = require('../middlewares/key');\n\nclass user {\n  /**\n   * class constructor\n   * @param {object} data\n   */\n  constructor() {\n    this.reflections = [];\n    this.reflectionssignin = [];\n      }\n  /**\n   * \n   * @returns {object} reflection object\n   */\n  ///////////////////////////////Signup\n  \n  create(data) {\n    \n \n\n    \n\n   //const result = Joi.validate({ username: 'abc', birthyear: 1994 }, schema);\n    \n    const email= data.email;\n    const token = jwt.sign({email:email},key.tokenkey);\n   \n  const newReflection = {\n         id: uuid.v4(),\n         email: data.email ,\n         first_name: data.first_name,\n         last_name: data.last_name,\n         token : token,\n         address :data.address ,\n         is_admin : data.is_admin ,\n         password : data.password,\n         createdDate: moment.now(),\n         modifiedDate: moment.now()\n         };\n      \n      //console.log(newReflection.token)\n    this.reflections.push(newReflection);\n    return newReflection\n   \n  \n  \n  }\n  //////////////////////////////////////End signup\n  ///////////////////////////////Signin\n  getunsigninuser(q) {\n    console.log(q.email);\n    console.log(q.password);\n    //console.log(Object.keys(q).length);\n    //const reflection = this.findOne(id);\n    //const index = this.reflections.indexOf(reflection);\n   //const emailfound = this.reflections.find(reflect => reflect.email === q.email);\n    const reflection = this.reflections.find(reflect => reflect.email === q.email)\n    if (reflection){\n    const index = this.reflections.indexOf(reflection);\n    console.log(\"index=\"+index); \n\n   const passwordfound = this.reflections.find(reflect => reflect.password === q.password); \n   if ((this.reflections[index].email === q.email) && (this.reflections[index].password === q.password)){\n  \n    return this.reflections.find(reflect => reflect.email === q.email);\n    }\n    else {\n\n      return {\"status\":404 , \"message\": \"Email or password Wrong\"};    \n    \n    }\n\n  }\n  else\n    {  return {\"status\":404 , \"message\": \"User  not found\"};    }\n  }\n  //////////////////////////////////////End signin\n///////////////////////////////create car post ad\n \n  findOne(id) {\n    return this.reflections.find(reflect => reflect.id === id);\n  }\n\n  \n\n  \n\n\n  findA1(success , lowPoint) {\nreturn this.reflections.filter(( reflect => reflect.lowPoint === lowPoint) && (reflect => reflect.success === success));\n  }\n\n  \n  /**\n   * @returns {object} returns all reflections\n   */\n  findAll() {\n    return this.reflections;\n  }\n\n  findAllsigninusers() {\n    return this.reflectionssignin;\n  }\n\n  findAllcarsads() {\n    return this.reflectionscreatecaradd;\n  }\n\n  findAllorders() {\n    return this.reflectioncreateorder;\n  }\n  /**\n   * \n   * @param {uuid} id\n   * @param {object} data \n   */\n  update(id, data) {\n    const reflection = this.findOne(id);\n    const index = this.reflections.indexOf(reflection);\n    this.reflections[index].success = data['success'] || reflection.success;\n    this.reflections[index].lowPoint = data['lowPoint'] || reflection.lowPoint;\n    this.reflections[index].takeAway = data['takeAway'] || reflection.takeAway;\n    this.reflections[index].modifiedDate = moment.now()\n    return this.reflections[index];\n  }\n\n  \n \n  \n\n  /**\n   * \n   * @param {uuid} id \n   */\n\n   \n  delete(id) {\n    const reflection = this.findOne(id);\n    const index = this.reflections.indexOf(reflection);\n    this.reflections.splice(index, 1);\n    return {};\n  }\n}\nexport default new user();"]}