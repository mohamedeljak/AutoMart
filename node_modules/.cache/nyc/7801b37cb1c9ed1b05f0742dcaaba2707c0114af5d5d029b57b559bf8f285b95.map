{"version":3,"sources":["Reflection.js"],"names":["Joi","require","Reflection","create","req","res","body","data","email","first_name","password","status","send","reflection","ReflectionModel","createsignin","createcarad","token","headers","manufacture","price","keyreflection","Object","keys","length","console","log","reflectioncaraddnotfound","createorderad","price_offered","params","car_id","getAll","reflections","findAll","getAllsigninusers","findAllsigninusers","getAllcarsads","findAllcarsads","getAllorders","findAllorders","getOne","findOne","id","getOrderOne","findoderOne","getOneCar","findCarOne","getA1","findA1","query","success","lowPoint","getunsoldcarpricerange","findsoldcarpricerange","getunsoldcar","findsoldcars","update","updatedReflection","updateorderprice","new_price","updatecarstatus","updatecarprice","car_price","deletecarad","ref","reflectionx"],"mappings":";;;;;;;AAAA;;;;AACA,IAAMA,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAnB;;AAEA,IAAMC,UAAU,GAAG;AACjB;;;;;;AAMAC,EAAAA,MAPiB,kBAOVC,GAPU,EAOLC,GAPK,EAOA;AACf,QAAI,CAACD,GAAG,CAACE,IAAJ,CAASC,IAAT,CAAcC,KAAf,IAAwB,CAACJ,GAAG,CAACE,IAAJ,CAASC,IAAT,CAAcE,UAAvC,IAAsD,CAACL,GAAG,CAACE,IAAJ,CAASC,IAAT,CAAcG,QAAzE,EAAmF;AACjF,aAAOL,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,mBAAW;AAAZ,OAArB,CAAP;AACD;;AACD,QAAMC,UAAU,GAAGC,uBAAgBX,MAAhB,CAAuBC,GAAG,CAACE,IAAJ,CAASC,IAAhC,CAAnB;;AACA,WAAOF,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,UAArB,CAAP;AACD,GAbgB;AAelBE,EAAAA,YAfkB,wBAeLX,GAfK,EAeAC,GAfA,EAeK;AACpB,QAAI,CAACD,GAAG,CAACE,IAAJ,CAASC,IAAT,CAAcC,KAAf,IAAwB,CAACJ,GAAG,CAACE,IAAJ,CAASC,IAAT,CAAcE,UAAvC,IAAsD,CAACL,GAAG,CAACE,IAAJ,CAASC,IAAT,CAAcG,QAAzE,EAAmF;AACjF,aAAOL,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,mBAAW;AAAZ,OAArB,CAAP;AACD;;AACD,QAAMC,UAAU,GAAGC,uBAAgBC,YAAhB,CAA6BX,GAAG,CAACE,IAAJ,CAASC,IAAtC,CAAnB;;AACA,WAAOF,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,UAArB,CAAP;AACD,GArBgB;AAsBlBG,EAAAA,WAtBkB,uBAsBNZ,GAtBM,EAsBDC,GAtBC,EAsBI;AACnB,QAAIY,KAAK,GAAGb,GAAG,CAACc,OAAJ,CAAY,cAAZ,CAAZ,CADmB,CAErB;;AACE,QAAI,CAACd,GAAG,CAACE,IAAJ,CAASa,WAAV,IAA0B,CAACf,GAAG,CAACE,IAAJ,CAASc,KAAxC,EAA+C;AAC7C,aAAOf,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,mBAAW;AAAZ,OAArB,CAAP;AACD;;AACD,QAAMC,UAAU,GAAGC,uBAAgBE,WAAhB,CAA4BZ,GAAG,CAACE,IAAhC,EAAqCW,KAArC,CAAnB;;AACA,QAAII,aAAa,GAAGC,MAAM,CAACC,IAAP,CAAYV,UAAZ,EAAwBW,MAA5C,CAPmB,CAQnB;;AACA,QAAIH,aAAa,GAAG,CAApB,EAAsB;AACtB,aAAOhB,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,kBAAS,GAAV;AAAgB,mBAAW,oBAA3B;AAAiD,gBAASC;AAA1D,OAArB,CAAP;AACuB,KAFvB,MAI0B;AACFY,MAAAA,OAAO,CAACC,GAAR,CAAYZ,uBAAgBE,WAAhB,CAA4BW,wBAAxC;AACC,aAAOtB,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,kBAAS,GAAV;AAAgB,mBAAW,sBAA3B;AAAmD,gBAAQC;AAA3D,OAArB,CAAP,CAFC,CAGF;AAED;AACxB,GAzCgB;AA2CnBe,EAAAA,aA3CmB,yBA2CLxB,GA3CK,EA2CAC,GA3CA,EA2CK;AACvB,QAAIY,KAAK,GAAGb,GAAG,CAACc,OAAJ,CAAY,cAAZ,CAAZ,CADuB,CAEtB;;AACE,QAAI,CAACd,GAAG,CAACE,IAAJ,CAASuB,aAAd,EAA6B;AAC3B,aAAOxB,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,mBAAW;AAAZ,OAArB,CAAP;AACD;;AACD,QAAMC,UAAU,GAAGC,uBAAgBc,aAAhB,CAA8BxB,GAAG,CAACE,IAAlC,EAAuCW,KAAvC,EAA6Cb,GAAG,CAAC0B,MAAJ,CAAWC,MAAxD,CAAnB;;AACA,QAAIV,aAAa,GAAGC,MAAM,CAACC,IAAP,CAAYV,UAAZ,EAAwBW,MAA5C;;AACA,QAAIH,aAAa,GAAG,CAApB,EAAsB;AACtB,aAAOhB,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,kBAAS,GAAV;AAAgB,mBAAW,uBAA3B;AAAoD,gBAASC;AAA7D,OAArB,CAAP;AACE,KAFF,MAGM;AACA,aAAOR,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,kBAAS,GAAV;AAAgB,mBAAW,wBAA3B;AAAqD,gBAAQC;AAA7D,OAArB,CAAP;AACD,KAbe,CAaf;;AAEN,GA1DgB;;AA6DjB;;;;;;AAMAmB,EAAAA,MAnEiB,kBAmEV5B,GAnEU,EAmELC,GAnEK,EAmEA;AACf,QAAM4B,WAAW,GAAGnB,uBAAgBoB,OAAhB,EAApB;;AACA,WAAO7B,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBqB,WAArB,CAAP;AACD,GAtEgB;AAwEjBE,EAAAA,iBAxEiB,6BAwEC/B,GAxED,EAwEMC,GAxEN,EAwEW;AAC1B,QAAM4B,WAAW,GAAGnB,uBAAgBsB,kBAAhB,EAApB;;AACA,WAAO/B,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBqB,WAArB,CAAP;AACD,GA3EgB;AA6EhBI,EAAAA,aA7EgB,yBA6EFjC,GA7EE,EA6EGC,GA7EH,EA6EQ;AACvB,QAAM4B,WAAW,GAAGnB,uBAAgBwB,cAAhB,EAApB;;AACA,WAAOjC,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,gBAAS,GAAV;AAAgB,iBAAW,WAA3B;AAAwC,cAASqB;AAAjD,KAArB,CAAP;AACD,GAhFgB;AAmFnBM,EAAAA,YAnFmB,wBAmFNnC,GAnFM,EAmFDC,GAnFC,EAmFI;AACnB,QAAM4B,WAAW,GAAGnB,uBAAgB0B,aAAhB,EAApB;;AACA,WAAOnC,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,gBAAS,GAAV;AAAgB,iBAAW,aAA3B;AAA0C,cAAQqB;AAAlD,KAArB,CAAP;AACD,GAtFgB;;AAwFjB;;;;;;AAMAQ,EAAAA,MA9FiB,kBA8FVrC,GA9FU,EA8FLC,GA9FK,EA8FA;AACf,QAAMQ,UAAU,GAAGC,uBAAgB4B,OAAhB,CAAwBtC,GAAG,CAAC0B,MAAJ,CAAWa,EAAnC,CAAnB;;AACA,QAAI,CAAC9B,UAAL,EAAiB;AACf,aAAOR,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,mBAAW;AAAZ,OAArB,CAAP;AACD;;AACD,WAAOP,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,UAArB,CAAP;AACD,GApGgB;AAsGjB+B,EAAAA,WAtGiB,uBAsGLxC,GAtGK,EAsGAC,GAtGA,EAsGK;AACpB,QAAMQ,UAAU,GAAGC,uBAAgB+B,WAAhB,CAA4BzC,GAAG,CAAC0B,MAAJ,CAAWa,EAAvC,CAAnB;;AACA,QAAI,CAAC9B,UAAL,EAAiB;AACf,aAAOR,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,mBAAW;AAAZ,OAArB,CAAP;AACD;;AACD,WAAOP,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,gBAAS,GAAV;AAAgB,iBAAW,sBAA3B;AAAmD,cAAQC;AAA3D,KAArB,CAAP;AACD,GA5GgB;AA8GjBiC,EAAAA,SA9GiB,qBA8GP1C,GA9GO,EA8GFC,GA9GE,EA8GG;AAClB,QAAMQ,UAAU,GAAGC,uBAAgBiC,UAAhB,CAA2B3C,GAAG,CAAC0B,MAAJ,CAAWa,EAAtC,CAAnB;;AACA,QAAI,CAAC9B,UAAL,EAAiB;AACf,aAAOR,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,mBAAW;AAAZ,OAArB,CAAP;AACD;;AACD,WAAOP,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,gBAAS,GAAV;AAAgB,iBAAW,oBAA3B;AAAiD,cAAQC;AAAzD,KAArB,CAAP;AACD,GApHgB;AAsHjBmC,EAAAA,KAtHiB,iBAsHX5C,GAtHW,EAsHNC,GAtHM,EAsHD;AAEd,QAAMQ,UAAU,GAAGC,uBAAgBmC,MAAhB,CAAuB7C,GAAG,CAAC8C,KAAJ,CAAUC,OAAjC,EAA2C/C,GAAG,CAAC8C,KAAJ,CAAUE,QAArD,CAAnB;;AACA,QAAI,CAACvC,UAAL,EAAiB;AACf,aAAOR,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,mBAAW;AAAZ,OAArB,CAAP;AACD;;AACD,WAAOP,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,UAArB,CAAP;AACD,GA7HgB;AAgInBwC,EAAAA,sBAhImB,kCAgIIjD,GAhIJ,EAgISC,GAhIT,EAgIc;AAE7B,QAAMQ,UAAU,GAAGC,uBAAgBwC,qBAAhB,CAAsClD,GAAG,CAAC8C,KAA1C,CAAnB;;AACA,QAAI,CAACrC,UAAL,EAAiB;AACf,aAAOR,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,mBAAW;AAAZ,OAArB,CAAP;AACD;;AACD,WAAOP,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,gBAAS,GAAV;AAAgB,iBAAW,WAA3B;AAAwC,cAAQC;AAAhD,KAArB,CAAP;AACD,GAvIgB;AAyInB0C,EAAAA,YAzImB,wBAyINnD,GAzIM,EAyIDC,GAzIC,EAyII;AAEnB,QAAMQ,UAAU,GAAGC,uBAAgB0C,YAAhB,CAA6BpD,GAAG,CAAC8C,KAAjC,CAAnB;;AACA,QAAI,CAACrC,UAAL,EAAiB;AACf,aAAOR,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,mBAAW;AAAZ,OAArB,CAAP;AACD;;AACD,WAAOP,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,UAArB,CAAP;AACD,GAhJgB;;AAmJjB;;;;;;AAMA4C,EAAAA,MAzJiB,kBAyJVrD,GAzJU,EAyJLC,GAzJK,EAyJA;AACf,QAAMQ,UAAU,GAAGC,uBAAgB4B,OAAhB,CAAwBtC,GAAG,CAAC0B,MAAJ,CAAWa,EAAnC,CAAnB;;AACA,QAAI,CAAC9B,UAAL,EAAiB;AACf,aAAOR,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,mBAAW;AAAZ,OAArB,CAAP;AACD;;AACD,QAAM8C,iBAAiB,GAAG5C,uBAAgB2C,MAAhB,CAAuBrD,GAAG,CAAC0B,MAAJ,CAAWa,EAAlC,EAAsCvC,GAAG,CAACE,IAA1C,CAA1B;;AACA,WAAOD,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB8C,iBAArB,CAAP;AACD,GAhKgB;AAkKnBC,EAAAA,gBAlKmB,4BAkKFvD,GAlKE,EAkKGC,GAlKH,EAkKQ;AACzB,QAAIY,KAAK,GAAGb,GAAG,CAACc,OAAJ,CAAY,cAAZ,CAAZ;AACE,QAAI0C,SAAS,GAACxD,GAAG,CAAC0B,MAAJ,CAAW8B,SAAzB;;AACA,QAAM/C,UAAU,GAAGC,uBAAgB+B,WAAhB,CAA4BzC,GAAG,CAAC0B,MAAJ,CAAWa,EAAvC,CAAnB;AACA;;;;;;;AAKA,QAAMe,iBAAiB,GAAG5C,uBAAgB6C,gBAAhB,CAAiCvD,GAAG,CAAC0B,MAAJ,CAAWa,EAA5C,EAAgDvC,GAAG,CAACE,IAApD,EAA0DW,KAA1D,CAA1B;;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYgC,iBAAZ;AACA,QAAIrC,aAAa,GAAGC,MAAM,CAACC,IAAP,CAAYmC,iBAAZ,EAA+BlC,MAAnD;;AACA,QAAIH,aAAa,GAAG,CAApB,EAAuB;AACvB,aAAOhB,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,kBAAS,GAAV;AAAgB,mBAAW,wBAA3B;AAAqD,gBAAQ8C;AAA7D,OAArB,CAAP;AACC,KAFD,MAGK;AACT,aAAOrD,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,kBAAS,GAAV;AAAgB,mBAAW,mCAA3B;AAAgE,gBAAQ8C;AAAxE,OAArB,CAAP,CADS,CAEmB;AAGvB;AACF,GAvLgB;AAyLnB;AACAG,EAAAA,eA1LmB,2BA0LHzD,GA1LG,EA0LEC,GA1LF,EA0LO;AAGxB,QAAIY,KAAK,GAAGb,GAAG,CAACc,OAAJ,CAAY,cAAZ,CAAZ;AACE,QAAI0C,SAAS,GAACxD,GAAG,CAAC0B,MAAJ,CAAW8B,SAAzB;;AACA,QAAM/C,UAAU,GAAGC,uBAAgBiC,UAAhB,CAA2B3C,GAAG,CAAC0B,MAAJ,CAAWa,EAAtC,CAAnB;AACA;;;;;;;AAKA,QAAMe,iBAAiB,GAAG5C,uBAAgB+C,eAAhB,CAAgCzD,GAAG,CAAC0B,MAAJ,CAAWa,EAA3C,EAA+CvC,GAAG,CAACE,IAAnD,EAAwDW,KAAxD,CAA1B;;AACC,QAAII,aAAa,GAAGC,MAAM,CAACC,IAAP,CAAYmC,iBAAZ,EAA+BlC,MAAnD;;AACF,QAAIH,aAAa,GAAG,CAApB,EAAsB;AACrB,aAAOhB,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,kBAAS,GAAV;AAAgB,mBAAW,2CAA3B;AAAwE,gBAAQ8C;AAAhF,OAArB,CAAP;AACD,KAFA,MAGI;AACP,aAAOrD,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,kBAAS,GAAV;AAAgB,mBAAW,6BAA3B;AAA0D,gBAAQ8C;AAAlE,OAArB,CAAP,CADO,CAEqB;AAGzB;AACA,GAhNgB;AAkNjBI,EAAAA,cAlNiB,0BAkNF1D,GAlNE,EAkNGC,GAlNH,EAkNQ;AACvB,QAAIY,KAAK,GAAGb,GAAG,CAACc,OAAJ,CAAY,cAAZ,CAAZ;AACA,QAAI6C,SAAS,GAAC3D,GAAG,CAAC0B,MAAJ,CAAWiC,SAAzB;;AACA,QAAMlD,UAAU,GAAGC,uBAAgBiC,UAAhB,CAA2B3C,GAAG,CAAC0B,MAAJ,CAAWa,EAAtC,CAAnB;AACA;;;;;;;AAKA,QAAMe,iBAAiB,GAAG5C,uBAAgBgD,cAAhB,CAA+B1D,GAAG,CAAC0B,MAAJ,CAAWa,EAA1C,EAA8CvC,GAAG,CAACE,IAAlD,EAAwDW,KAAxD,CAA1B;;AACA,QAAII,aAAa,GAAGC,MAAM,CAACC,IAAP,CAAYmC,iBAAZ,EAA+BlC,MAAnD;;AACA,QAAIH,aAAa,GAAG,CAApB,EAAsB;AACtB,aAAOhB,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,kBAAS,GAAV;AAAgB,mBAAW,wBAA3B;AAAqD,gBAAQ8C;AAA7D,OAArB,CAAP;AACC,KAFD,MAGG;AACD,aAAOrD,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,kBAAS,GAAV;AAAgB,mBAAW,yBAA3B;AAAsD,gBAAQ8C;AAA9D,OAArB,CAAP,CADC,CAEqB;AAGzB;AAEA,GAvOgB;;AA0OjB;;;;;;AASCM,EAAAA,WAnPgB,uBAmPJ5D,GAnPI,EAmPCC,GAnPD,EAmPM;AACrB,QAAMQ,UAAU,GAAGC,uBAAgBiC,UAAhB,CAA2B3C,GAAG,CAAC0B,MAAJ,CAAWa,EAAtC,CAAnB;;AACA,QAAI,CAAC9B,UAAL,EAAiB;AACf,aAAOR,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,mBAAW;AAAZ,OAArB,CAAP;AACD;;AAED,QAAMqD,GAAG,GAAGnD,uBAAgBkD,WAAhB,CAA4B5D,GAAG,CAAC0B,MAAJ,CAAWa,EAAvC,CAAZ;;AACA,QAAMuB,WAAW,GAAGpD,uBAAgBiC,UAAhB,CAA2B3C,GAAG,CAAC0B,MAAJ,CAAWa,EAAtC,CAApB;;AACA,WAAOtC,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,gBAAS,CAAV;AAAa,iBAAW;AAAxB,KAArB,CAAP,CARqB,CASrB;AAED,GA9PgB;AAAA,6BAkQVR,GAlQU,EAkQLC,GAlQK,EAkQA;AACf,QAAMQ,UAAU,GAAGC,uBAAgB4B,OAAhB,CAAwBtC,GAAG,CAAC0B,MAAJ,CAAWa,EAAnC,CAAnB;;AACA,QAAI,CAAC9B,UAAL,EAAiB;AACf,aAAOR,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,mBAAW;AAAZ,OAArB,CAAP;AACD;;AACD,QAAMqD,GAAG,GAAGnD,iCAAuBV,GAAG,CAAC0B,MAAJ,CAAWa,EAAlC,CAAZ;;AACA,WAAOtC,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBqD,GAArB,CAAP;AACD;AAzQgB,CAAnB;eA4Qe/D,U","sourceRoot":"/home/mhashim/Desktop/NewWork/AutoMart/src/controllers","sourcesContent":["import ReflectionModel from '../models/Reflection';\nconst Joi = require('joi');\n\nconst Reflection = {\n  /**\n   * \n   * @param {object} req \n   * @param {object} res\n   * @returns {object} reflection object \n   */\n  create(req, res) {\n    if (!req.body.data.email || !req.body.data.first_name ||  !req.body.data.password) {\n      return res.status(400).send({'message': ' signup All fields are required'})\n    }\n    const reflection = ReflectionModel.create(req.body.data);\n    return res.status(201).send(reflection);\n  },\n\n createsignin(req, res) {\n    if (!req.body.data.email || !req.body.data.first_name ||  !req.body.data.password) {\n      return res.status(400).send({'message': ' SigninAll fields are required'})\n    }\n    const reflection = ReflectionModel.createsignin(req.body.data);\n    return res.status(201).send(reflection);\n  },\n createcarad(req, res) {\n    var token = req.headers['access-token'];\n  //console.log(\"token===\"+token);\n    if (!req.body.manufacture ||  !req.body.price) {\n      return res.status(400).send({'message': '  car ad  All fields are required'})\n    }\n    const reflection = ReflectionModel.createcarad(req.body,token);\n    var keyreflection = Object.keys(reflection).length;\n    //console.log(\"xxxxxxxxxx\"+keyreflection); \n    if (keyreflection > 2){ \n    return res.status(201).send({\"status\":201 , \"message\": \"Car AD  is created\", \"data\" : reflection});\n                          }\n\n                          else{\n                            console.log(ReflectionModel.createcarad.reflectioncaraddnotfound);\n                             return res.status(201).send({\"status\":201 , \"message\": \" Car ad not created \", \"data\" :reflection});\n                            //return res.status(201).send({\"status\":404 , \"message\": \"User not found check token please\"});\n\n                          }  \n  },\n\ncreateorderad(req, res) {\n var token = req.headers['access-token'];\n  //console.log(\"token===\"+token);\n    if (!req.body.price_offered) {\n      return res.status(400).send({'message': '  order ad  All fields are required'})\n    }\n    const reflection = ReflectionModel.createorderad(req.body,token,req.params.car_id);\n    var keyreflection = Object.keys(reflection).length;\n    if (keyreflection > 2){\n    return res.status(201).send({\"status\":201 , \"message\": \"Buy Order  is created\", \"data\" : reflection});\n     }\n     else {\n          return res.status(201).send({\"status\":201 , \"message\": \" Order ad not created \", \"data\" :reflection});\n        }//////////////////////if ok \n  \n  },\n\n\n  /**\n   * \n   * @param {object} req \n   * @param {object} res \n   * @returns {object} reflections array\n   */\n  getAll(req, res) {\n    const reflections = ReflectionModel.findAll();\n    return res.status(200).send(reflections);\n  },\n\n  getAllsigninusers(req, res) {\n    const reflections = ReflectionModel.findAllsigninusers();\n    return res.status(200).send(reflections);\n  },\n\n   getAllcarsads(req, res) {\n    const reflections = ReflectionModel.findAllcarsads();\n    return res.status(200).send({\"status\":200 , \"message\": \"all cars \", \"data\" : reflections});\n  },\n\n\ngetAllorders(req, res) {\n    const reflections = ReflectionModel.findAllorders();\n    return res.status(200).send({\"status\":200 , \"message\": \"all orders \", \"data\" :reflections});\n  },\n\n  /**\n   * \n   * @param {object} req \n   * @param {object} res\n   * @returns {object} reflection object\n   */\n  getOne(req, res) {\n    const reflection = ReflectionModel.findOne(req.params.id);\n    if (!reflection) {\n      return res.status(404).send({'message': 'reflection not found'});\n    }\n    return res.status(200).send(reflection);\n  },\n\n  getOrderOne(req, res) {\n    const reflection = ReflectionModel.findoderOne(req.params.id);\n    if (!reflection) {\n      return res.status(404).send({'message': ' Order not found not found'});\n    }\n    return res.status(200).send({\"status\":200 , \"message\": \" Get order ad by id \", \"data\" :reflection});\n  },\n\n  getOneCar(req, res) {\n    const reflection = ReflectionModel.findCarOne(req.params.id);\n    if (!reflection) {\n      return res.status(404).send({'message': ' Car found not found'});\n    }\n    return res.status(200).send({\"status\":200 , \"message\": \" Get car ad by id \", \"data\" :reflection});\n  },\n\n  getA1(req, res) {\n  \n    const reflection = ReflectionModel.findA1(req.query.success , req.query.lowPoint);\n    if (!reflection) {\n      return res.status(404).send({'message': 'reflection seach  not found'});\n    }\n    return res.status(200).send(reflection);\n  },\n\n\ngetunsoldcarpricerange(req, res) {\n  \n    const reflection = ReflectionModel.findsoldcarpricerange(req.query);\n    if (!reflection) {\n      return res.status(404).send({'message': '  unsold price  seach  not found'});\n    }\n    return res.status(200).send({\"status\":200 , \"message\": \"all cars \", \"data\" :reflection});\n  },\n\ngetunsoldcar(req, res) {\n  \n    const reflection = ReflectionModel.findsoldcars(req.query);\n    if (!reflection) {\n      return res.status(404).send({'message': 'No availabe car'});\n    }\n    return res.status(200).send(reflection);\n  },\n\n\n  /**\n   * \n   * @param {object} req \n   * @param {object} res \n   * @returns {object} updated reflection\n   */\n  update(req, res) {\n    const reflection = ReflectionModel.findOne(req.params.id);\n    if (!reflection) {\n      return res.status(404).send({'message': 'reflection not found'});\n    }\n    const updatedReflection = ReflectionModel.update(req.params.id, req.body)\n    return res.status(200).send(updatedReflection);\n  },\n\nupdateorderprice(req, res) {\n  var token = req.headers['access-token'];\n    var new_price=req.params.new_price;\n    const reflection = ReflectionModel.findoderOne(req.params.id);\n    /*\n    if (!reflection) {\n      return res.status(404).send({'message': ' update  order  not found'});\n    }\n    */\n    const updatedReflection = ReflectionModel.updateorderprice(req.params.id, req.body, token)\n    console.log(updatedReflection); \n    var keyreflection = Object.keys(updatedReflection).length;\n    if (keyreflection > 2 ){\n    return res.status(200).send({\"status\":200 , \"message\": \" successfully updated \", \"data\" :updatedReflection});\n    }\n    else {\nreturn res.status(201).send({\"status\":201 , \"message\": \" order offered price not updated \", \"data\" :updatedReflection});\n                            //return res.status(201).send({\"status\":404 , \"message\": \"User not found check token please\"});\n\n\n    }\n  },\n\n/////////////////////////////////////////\nupdatecarstatus(req, res) {\n\n\n  var token = req.headers['access-token'];\n    var new_price=req.params.new_price;\n    const reflection = ReflectionModel.findCarOne(req.params.id);\n    /*\n    if (!reflection) {\n      return res.status(404).send({'message': ' ID error  Can not update car stutas to sold   '});\n    }\n    */\n    const updatedReflection = ReflectionModel.updatecarstatus(req.params.id, req.body,token)\n     var keyreflection = Object.keys(updatedReflection).length;\n   if (keyreflection > 2){\n    return res.status(200).send({\"status\":200 , \"message\": \" successfully updated  car status to sold\", \"data\" :updatedReflection});\n  }\n  else {\nreturn res.status(201).send({\"status\":201 , \"message\": \" Car Ad Status not updated \", \"data\" :updatedReflection});\n                            //return res.status(201).send({\"status\":404 , \"message\": \"User not found check token please\"});\n\n\n  }\n  },\n\n  updatecarprice(req, res) {\n    var token = req.headers['access-token'];\n    var car_price=req.params.car_price;\n    const reflection = ReflectionModel.findCarOne(req.params.id);\n    /*\n    if (!reflection) {\n      return res.status(404).send({'message': ' car_price not updated  '});\n    }\n    */\n    const updatedReflection = ReflectionModel.updatecarprice(req.params.id, req.body, token )\n    var keyreflection = Object.keys(updatedReflection).length;\n    if (keyreflection > 2){\n    return res.status(200).send({\"status\":200 , \"message\": \" successfully updated \", \"data\" :updatedReflection});\n    }\n  else {\n      return res.status(201).send({\"status\":201 , \"message\": \" Car price not updated \", \"data\" :updatedReflection});\n                            //return res.status(201).send({\"status\":404 , \"message\": \"User not found check token please\"});\n\n\n  }\n\n  },\n\n\n  /**\n   * \n   * @param {object} req \n\n   * @param {object} res \n   * @returns {void} return statuc code 204 \n   */\n\n   \n   deletecarad(req, res) {\n    const reflection = ReflectionModel.findCarOne(req.params.id);\n    if (!reflection) {\n      return res.status(404).send({'message': 'car id  not found'});\n    }\n    \n    const ref = ReflectionModel.deletecarad(req.params.id);\n    const reflectionx = ReflectionModel.findCarOne(req.params.id);\n    return res.status(404).send({'status':0 ,'message': 'Car Ad successfully deleted'});\n    //return res.status(204).send(me);\n        \n  },\n\n\n\n  delete(req, res) {\n    const reflection = ReflectionModel.findOne(req.params.id);\n    if (!reflection) {\n      return res.status(404).send({'message': 'reflection not found'});\n    }\n    const ref = ReflectionModel.delete(req.params.id);\n    return res.status(204).send(ref);\n  }\n}\n\nexport default Reflection;"]}